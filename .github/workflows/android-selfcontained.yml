name: Android Build (signed AAB, self-contained)
on: { workflow_dispatch: {} }

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: '17' }
      - name: Install Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: |-
            platform-tools
            platforms;android-34
            build-tools;34.0.0
      - name: Create Android project
        run: |
          set -e
          mkdir -p app_project && cd app_project
          cat > settings.gradle.kts <<'EOF'
          rootProject.name="wizytowka-orion"; include(":app")
          EOF
          cat > build.gradle.kts <<'EOF'
          plugins { id("com.android.application") version "8.4.0" apply false; kotlin("android") version "1.9.23" apply false }
          EOF
          mkdir -p app/src/main/java/com/czarna/wizytowka/ui app/src/main/res/values
          cat > app/build.gradle.kts <<'EOF'
          plugins { id("com.android.application"); kotlin("android") }
          android {
            namespace="com.czarna.wizytowka"; compileSdk=34
            defaultConfig { applicationId="com.czarna.wizytowka"; minSdk=24; targetSdk=34; versionCode=1; versionName="1.0.0" }
            buildTypes { release { isMinifyEnabled=true; proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro") } }
            buildFeatures { compose=true }; composeOptions { kotlinCompilerExtensionVersion="1.5.15" }
          }
          dependencies {
            implementation(platform("androidx.compose:compose-bom:2024.06.00"))
            implementation("androidx.activity:activity-compose:1.9.0")
            implementation("androidx.compose.ui:ui")
            implementation("androidx.compose.ui:ui-tooling-preview")
            implementation("androidx.compose.material3:material3")
            debugImplementation("androidx.compose.ui:ui-tooling")
          }
          EOF
          echo "# keep defaults" > app/proguard-rules.pro
          cat > app/src/main/AndroidManifest.xml <<'EOF'
          <manifest xmlns:android="http://schemas.android.com/apk/res/android">
            <application android:label="@string/app_name" android:icon="@mipmap/ic_launcher">
              <activity android:name="com.czarna.wizytowka.MainActivity" android:exported="true">
                <intent-filter><action android:name="android.intent.action.MAIN"/><category android:name="android.intent.category.LAUNCHER"/></intent-filter>
              </activity>
            </application>
          </manifest>
          EOF
          cat > app/src/main/res/values/strings.xml <<'EOF'
          <resources><string name="app_name">Wizytówka ORION</string></resources>
          EOF
          cat > app/src/main/java/com/czarna/wizytowka/MainActivity.kt <<'EOF'
          package com.czarna.wizytowka
          import android.os.Bundle
          import androidx.activity.ComponentActivity
          import androidx.activity.compose.setContent
          import com.czarna.wizytowka.ui.MainScreen
          class MainActivity: ComponentActivity(){
            override fun onCreate(b: Bundle?){ super.onCreate(b); setContent{ MainScreen() } }
          }
          EOF
          cat > app/src/main/java/com/czarna/wizytowka/ui/MainScreen.kt <<'EOF'
          package com.czarna.wizytowka.ui
          import android.content.Intent; import android.net.Uri
          import androidx.compose.foundation.layout.*; import androidx.compose.material3.*; import androidx.compose.runtime.Composable
          import androidx.compose.ui.Alignment; import androidx.compose.ui.Modifier; import androidx.compose.ui.platform.LocalContext
          import androidx.compose.ui.text.style.TextAlign; import androidx.compose.ui.unit.dp
          @Composable fun MainScreen(){
            val ctx= LocalContext.current
            Scaffold(topBar={ TopAppBar(title={ Text("Wizytówka ORION") }) }){ p ->
              Column(Modifier.padding(p).fillMaxSize().padding(24.dp), horizontalAlignment=Alignment.CenterHorizontally){
                Text("Szybki kontakt", style=MaterialTheme.typography.bodyLarge, textAlign=TextAlign.Center)
                Spacer(Modifier.height(24.dp))
                Button(onClick={ ctx.startActivity(Intent(Intent.ACTION_VIEW, Uri.parse("https://dexuszy.github.io/wizytowka-orion-site/"))) }, modifier=Modifier.fillMaxWidth()){ Text("Strona WWW") }
                Spacer(Modifier.height(12.dp))
                Button(onClick={ ctx.startActivity(Intent(Intent.ACTION_SENDTO, Uri.parse("mailto:krzysztofheider02@gmail.com"))) }, modifier=Modifier.fillMaxWidth()){ Text("E-mail") }
                Spacer(Modifier.height(12.dp))
                Button(onClick={ ctx.startActivity(Intent(Intent.ACTION_DIAL, Uri.parse("tel:+48667761121"))) }, modifier=Modifier.fillMaxWidth()){ Text("Telefon") }
                Spacer(Modifier.height(12.dp))
                Button(onClick={ ctx.startActivity(Intent(Intent.ACTION_VIEW, Uri.parse("https://maps.google.com/?q=Raciborz"))) }, modifier=Modifier.fillMaxWidth()){ Text("Mapa") }
              } } }
          EOF
      - name: Install Gradle 8.7
        run: |
          curl -sLo /tmp/gradle.zip https://services.gradle.org/distributions/gradle-8.7-bin.zip
          unzip -q /tmp/gradle.zip -d $HOME/gradle
          echo "$HOME/gradle/gradle-8.7/bin" >> $GITHUB_PATH
      - name: Build AAB & APK
        run: gradle -p app_project :app:bundleRelease :app:assembleRelease
      - name: Generate upload keystore & sign AAB
        env: { KS_PASS: "orionUpload123!" }
        run: |
          keytool -genkeypair -v -keystore keystore.jks -alias upload -keyalg RSA -keysize 2048 -validity 9125 \
            -storepass "$KS_PASS" -keypass "$KS_PASS" -dname "CN=Heider Studios, O=Heider, L=Raciborz, C=PL"
          AAB=app_project/app/build/outputs/bundle/release/app-release.aab
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
            -keystore keystore.jks -storepass "$KS_PASS" -keypass "$KS_PASS" "$AAB" upload
          keytool -export -rfc -alias upload -keystore keystore.jks -storepass "$KS_PASS" -file upload_certificate.pem
          mv "$AAB" app_project/app/build/outputs/bundle/release/app-release-signed.aab
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wizytowka-orion-build
          path: |
            app_project/app/build/outputs/apk/release/*.apk
            app_project/app/build/outputs/bundle/release/app-release-signed.aab
            keystore.jks
            upload_certificate.pem
